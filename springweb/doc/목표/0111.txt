1. 도입
웹사이트를 방문했을떄 게시판을 보면 수많은 글들이 페이지에 걸쳐 정리되어있는것을 볼 수 있습니다.
간혹, 특정 글에는 답글이 붙어있어 대화의 흐름을 볼 수 있죠.
이처럼 게시판의 페이지이 처리와 답글 기능은 웹 개발의 중요한 부분입니다.
이번 세션에서는 Spring을 사용하여 이러한 기능을 구현하는 방법을 배워보겠습니다.

2. 학습목표
- 답글 처리와 페이징 처리의 필요성과 기본원리 이해
- Spring 프레임워크를 활용한 게시판 답글 처리 구현 방법 습득
- Spring 프레임워크를 활용한 페이징 처리 알고리즘 이해 및 구현

3. 핵심키워드
- 답글처리(Reply Handing) : 게시판 내 특정 게시글에 대한 응답을 구조화하는 방법
- 페이징처리(Pagination) : 게시글 목록을 페이지별로 나누어 표시하는 방법
- Spring MVC : Spring 프레임워크의 Model-VIew-COntroller 아키텍처
- Mybatis : SQL 매필 프레임워크로,  SQL 쿼리와 객체 사이의 자동 매핑을 제공
- JPA(Java Persistence API) : 자바 ORM 기술에 대한 API 표준 명세

4. 생각토론
- 답글과 원글 간의 관계를 데이터베이스에서 어떻게 표현할 수 있을까요?
- 사용자 경험 측면에서 페이징 처리가 왜 중요할까요?
- Spring에서 페이징 처리를 구현하는 다양한 방법에는 어떤것들이 있을까요?

5. 간단한퀴즈
1. Spring MVC 에서 Controller와 View 사이의 데이터전달은 어떻게 이루어집니까?
2. JPA를 사용하여 데이터를 페이징처리할 떄 주로 사용하는 인터페이스는 무엇입니까?

6. 실무적용
- 답글 처리구현 : 게시글에 대한 답글을 구조화하여 데이터베이스에 저장하고, 이를 화면에 계층적으로 표시
- 페이징 처리 구현 : 사용자가 게시판에서 게시글 목록을 볼 때, 페이지 단위로 게시글을 나누어 보여주는 기능
	예를 들어, 한 페이지에 10개의 게시글을 보여주고 사용자가 다음 펭지ㅣ로 넘어갈 수 있는 인터페이스 재공
- Spring Boot와 Mybatis 또는 JPA 사용 : 게시글의 답글 처리와 페이징 처리로직을 구현하고, 
	Spring Boot를 사용하여 웹 어플리케이션을 구축.
	Mybatis또는 JPA를 이용하여 데이터베이스와의 연동처리	
