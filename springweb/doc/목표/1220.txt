### 1. 흥미로운 도입
상사해보세요 여러분이 대형 쇼핑몰의 매니저라고 합니다. 수천 가지의 다양한 상품들, 많은 고객들, 그리고 매일 일어나는
거래들을 어떻게 관리할 수 있을까요? 여기서 오라클 데이터베이스가 중요한 역할을 합니다. 마치 거대한 쇼핑몰의 각 섹션과
상호작용을 관리하는 것처럼, 오라클 데이터베이스는 복잡한 데이터와 관계들을 효율적으로 관리할 수 있는 강력한 도구입니다. 
이번 세션에서는 오라클 데이터베이스의 관계형 설계에 대해 알아보곘습니다. 

### 2. 학습목표
- 관계형 데이터베이스의 기본 원리 이해
- 오라클 데이터베이스의 주요 기능과 특징 파악
- 태이블 간의 관계 설정 방법 학습
- 정규화와 역정규화의 개념 이해

### 3. 주요 핵심 키워드와 개념
- **테이블** : 테이블을 저장하는 기본 단위
- **행(row)/열(column)** : 테이블 내 데이터 구조
- **기본 키** : 각 행의 고유 식별자
- **외래 키** : 다른 테이블과의 관계를 나타내는 키
- **정규화(normalization)** : 데이터 중복을 최소화하기 위한 설계 과정
- **역정규화(denormalization)** : 성능 향상을 위해 의도적으로 중복을 허용하는 과정

### 4. 생각하고 토론해볼 내용
- 정규화 과정에서 데이터의 중복을 제거하는 것이 왜 중요한가?
- 역정규화는 언제 필요하며, 어떤 장단점을 가지는가?
- 데이터 베이스 설계에서 성능과 유지보수 사이의 균형을 어떻게 맞출 수 있을까?

### 5. 간단한 퀴즈
1. 데이터베이스에서 '일대다(1:N)' 관계는 무엇을 의미하나요?
2. 오라클 데이터베이스에서 '시퀀스(Sequence)'는 어떤 용도로 사용하나요?
3. 정규화를 수행하는 주된 목적은 무엇인가요?

### 6. 실무적용 예시
- **고객 관리 시스템** : 고객정보, 주문내역, 상품정보를 관리하는 데이터베이스 설계
	- 고객테이블, 주문테이블, 상품테이블 간의 관계 설정
	- 주문 테이블에서 고객 ID를 외래 키로 사용하여 고객 정보에 접근
- **재고 관리 시스템** : 재고, 공급업체, 구매주문을 관리하는 데이터베이스 설계
	- 재고상태, 공급업체정보, 구매주문의 관계를 정의
	- 정규화를 통해 중복 데이터 제가와 업데이트 무결성 보장