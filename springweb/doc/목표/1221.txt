- 의존성 주입의 기본원리를 이해합니다.
- DI가 코드 유지보수와 확장성에 어떤 이점을 주는지 배웁니다.
- 다양한 DI패턴(생성자주입, 새터주입, 필드주입)을 학습합ㄴ디ㅏ.

- 의존성주입 : 객체가 필요로하는 의존성을 외부에서 주입하는 기법
- Ioc : 프로그램의 흐름을 외부에서 제어하는 원리
 - 컨테이너 : 의존성을 관리하고 주입하는 환경 또는 프레임워크
 - 생성자주입 : 객체 생성 시 필요한 의존성을 주입하는 방식
 - 새터 주입 : 새터 메소드를 통해 의존성을 주입하는 방식
 
 1) 의존성 주입에 주된 이점?
 -a) 성능향상  
 -a) 코드 재사용성
 -a) 유지보수의 용이성
 -a) 실행 속도 증가
 
 2) Ioc의 정확한 의미? = (Inversion of Control)
 
 ### 6. 실무적용예시 
 - **웹 애플리케이션 프레임워크** : Spring , ASP.NET 등의 프레임워크에서 서비스 또는 레포지토리 계층을 컨트롤러에 자동 주입
 - **테스트 코드 작성** : Mock 객체를 사용하여 테스트 시 실제 의존성을대체, 테스트가 간편해짐
 - **플러그인 시스템** : 다양한 플러그인이나 모듈을 의존성 주입을 통해 쉽게 통합하고 확장 가능