### 1. 흥미로운 도입
건물을 짓기위해선 뼈대가 되는 구조와 그 위에 얹히는 다양한 설비가 필요합니다. 이처럼,
웹 어플리케이션을 구축할 때도 '프레임워크'라는 뼈대와 '라이브러리'로서의 설비가 필요합니다.
Spring은 웹어플리케이션의 강력한 뼈대를 제공하며, MyBatis는 데이터베이스와의 소통을 쉽게 만드는
설비와 같습니다. 이 둘을 결합함으롯써, 우리는 강력하고 효율적인 웹 어플리케이션을 구축할 수 있습니다.

### 2. 학습목표
- Spring 프레임워크의 기본 개념과 특징 이해하기
- MyBatis와의 통합 방법 이해하기
- 데이터베이스 CRUD연산을 Spring과 Mabatis를 사용하여구현하기
- 트랜젝션 관리 이해하기

### 3. 핵심 키워드/개념
- Spring Framework : Java 기반 프레임워크
- MyBatis : 객체 지향 프로그램 언어인 Java와 Sql데이터베이스 간의 연동을 용이하게 하는 퍼시스턴스 프레임워크
- Dependency Injection : 객체간의 의존성을 외부에서 주입하는 방식
- AOP(Aspect-Oriented Programming) : 관심사의 분리를 통한 프로그래밍 방법론
- CRUD Operations : 데이터베이스에서 Create, Read, Update, Delete 작업

### 4. 생각하고 토론해볼 내용 
- Spring 프레임워크를 사용하는 주된 장점은 무엇일까요?
- myBatis를 사용하여 데이터베이스를 다루는 것이 순수 JDBC에 비해 어떤 이점이 있을까요? 
- 의존성 주입이 가져오는 장점과 그 구현 방식에 대해 논의해보세요.

### 5. 간단한 퀴즈
1. Spring에서 관리되는 객체를 무엇이라고 부르나요?
2. MyBatis에서 SQL매핑 파일의 확장자는 무엇인가요?
3. Spring에서 XML기반의 설정과 JAVA기반의 설정 중 어느것이 더 권장되고 있나요?

### 6. 실무적용 예시
- 사용자관리시스템 : 사용자 정보를 관리하는 웹 애플리케이션 개발. Spring을 사용하여
	사용자인증, 세션관리를 구현하고 MyBatis로 사용자 데이터를 관리합니다.

- 상품 카탈로그 서비스 : 상품 정보를 보여주는 웹 애플리케이션. Spring MVC로 웹인터페이스를 구현하고, 
	MyBatis를 사용하여 상품 데이터를 관리합니다.
	
- 주문 처리 시스템 : 주문 정보를 처리하는 백엔드 시스템. Spring의 트랜잭션 관리 기능을 활용하여
	안정적인 주문 처리 로직을 구축하고, MyBatis로 주문 데이터를 처리합니다