1. 도입
당신이 커푭에서 주문을 하고, 서버가 주방에 주문을 전다랗는 모습을 생각해보세요. 
이 과정에서 고객와 주방 사이의 중개자 역할을 하는 것이바로 `Ajax`와 같습니다.
Ajax는 서버와 통신하기 위해 전체 페이지를 새로고침하지 않아도 됩니다.
이와 유사하게 Axios는 현대 웹 애플리케이션에서 서버와의 비동기 통신을 간편하게 해주는 도구입니다.
Spring과 결합하면 더욱 강력하고 효율적인 웹 애플리케이션을 구축할 수 있습ㄴ디ㅏ.

2. 목표
- Ajax의 개념과 작동 원리를 이해합니다.
- Axios를 사용하여 비동기 Http 요청을 수행하는 방법을 배웁니다.
- Spring과 Axios를 통합하여 데이터를 주고받는 방법을 학습합니다.
- 비동기요청과 응답처리에 대한이해를 깊게 합니다.

3. 핵심키워드
- Ajax(Asynchronous Javascript and Xml) 
- Axios : 자바스크립트 라이브러리, HTTP 클라이언트
- Spring Boot : 자바 기반의 경량화 된 프레임워크
- REST APT : 서버와 클라이언트 간의 통신방법
- JSON(Javascript Object Notation) : 데이터 교환 형식

4. 생각 토론
- Ajax와 Axios를 사용할 떄의 장단점은 무엇이 있을까요?
- Spring Boot에서 REST API를 설계할 떄 중요한 고려사항은 무엇일까요?
- 비동기방식이 웹어플리케이션 의 사용자 경험 어떤 영향을 미칠까요?

5. 퀴즈
1) Axios를 사용하여 GET요청을 보내는 방법은 무엇인가요?
2) Spring Boot에서 REST 를 컨트롤러에 선언하기위해 샤용허는 애너테이션은 무엇인가요?
3) JSON은 어떤 목적으로 사용되는 데이터 형식인가요?

6. 실무
- 사용자 인증 시스템 : 로그인 요청을 비동기적으로 처리하여 사용자 인증 상태를 관리하는 시스템
- 데이터 대시보드 : 서버로부터 실시간으로 데이터를 받아와 동적으로 대시보드를 업데이트 하는 웹 애플리케이션
- 컨텐츠 관리 시스템(CMS) : 사용자가 컨텐츠를 추가 수정 삭제할 수 있는 관리자 인터페이스 구현