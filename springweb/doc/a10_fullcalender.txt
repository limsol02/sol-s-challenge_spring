# fullcalendar를 통한 스프링에서 jquery 라이브러리 ajax 연동처리
1. fullcalendarsms jquery리반의 강력한 캘린터 인터페이스 라이브러리로 웹 애플리케이션의 풍부한
캘린더 기능을 쉽게 추가할 수 있습니다. 
json 데이터 형식을 사용해 백엔드와 프론트엔드 간의 효율적인 데이터 교환을 가능하게 하면 
이벤트관리(등록,수정,삭제) 등의 기능을 제공합니다.

2. 스프링 프레임워크를 사용하여 fullcalendar를 연동하는 웹 애플리케이션 개발과정은 아래와 같습니다.
	1) 개발환경구성
	- 기본 소스 확인 : fullcalendar 기본소스와 api문서를 확인
	- 필요한 css,js,html 파일 선언 : 필요한 css와 javascript 파일을 프로젝트에 포함시킵니다(a00_com 공통폴드)
	- jsp를 통한 기본 화면 호출처리 : 초기화면 controller와 화면호출 view(jsp) 를 통해 fullcalendar를 표시할 jsp를 준비합니다.
	
	====board에서 위와 같이 환경설정 해서 calendar.do로 초기화면처리=======================
	[1] webapp 밑에 기본예제 html 폴드 복사
	[2] webapp/a00_com에 공통 필드 복사
	[3] webapp/a05_fullcalendar.js 생성
		css복사
		js lib 복사
		js 코드 복사
		<div id="calendar"></div> 처리 실행출력
	[4] fullcalendar 를 위한 controller 
		jsp(WEB_INF/view/a05_fullcalendar.jsp)
		호출..
		calendar.do로 화면 출력..
	
	
	
	2) backend 처리(DB처리)
	- DB테이블 구성 : fullcalendar에 필요한 이벤트 데이터를 저장한 테이블을 생성합니다.
	[필드]
	id, title, start, end, backgroundcolor, textcolor, allday, url, writer, content
	create table calendar(
		id number primary key,
		title varchar2(100),
		start1 date,
		end1 date,
		writer varchar2(50),
		content varchar2(2000),
		backgroundcolor varchar2(7),
		textcolor varchar2(7),
		allday number(1),
		url varchar2(500)
	);
	
	create sequence cal_seq;
	
	- 주요 sql문 작성 : 이벤트의 리스트, 등록, 수정, 삭제에 필요한 sql을 작성합니다.
	- vo/dto 클래스 선언 : 데이터 전송 객체 및 리스트를 위하여 선언하고 데이터베이스와의 통신에 사용합니다.
	- dao/mapper 선언 : 데이터 접근 객체(dao), mybatis mapper를 정의하여 데이터베이스 연동을 처리합니다. 
	
	3) frontend처리(화면-jsp/js)
	- 기본 api를 기준으로 json데이터 로딩 메서드 구현 : fullcalendar에 필요한 이벤트 데이터를 json형식으로 로드합니다.
	- 각 기능별 이벤트 처리 함수 구현 : 이벤트 추가, 수정, 삭제 등의 사용자 인터랙션을 처리하는 함수를 작성합니다.
	- ajax를 통한 비동기데이터 처리 : 사용자 액션에 따라 서버에 데이터를 요청하고 응답을 처리합니다. 
	
	4) 추가고려사항
	- 보안 및 유효성 검증 : 사용자 입력 데이터에 대한 검증 및 필터링을 수행하여 보안을 강화합니다.
	- 응답성과 사용자 경험 : ui/ux 디자인을 고려하여 사용자에게 직관적이고 쉽게 사용할 수 있는 인터페이스를 제공합니다.
	- 테스트 및 디버깅 : 기능별 및 통합테스트를 통해 어플리케이션의 안정성을 검증합니다.
	
# 스프링에서 처리하는 AJAX
1. 스프링에서는 view를 json으로 처리하여 객체를 json데이터로 처리하게 해준다.
	요청값 ==> 모델데이터 설정 ==> json view
	화면단(객체 ==> json으로 출력)

2. 단계별 처리 내용 확인
	1) 기본값 처리(모델데이터)
	2) 요청값 + 모델 데이터 처리
	3) DB연동 + 요청값 + 모델 데이터(json)
	4) 실무 화면에서 ajax 처리
	
# 전체 일정 데이터 처리
1. Json 데이터에 의한 DB구조 설정/ 테이블생성/ sequence생성
2. 기본 sql문 작성
3. vo 작성(DB select문에 의해 조회된 내용을 VO객체로 할당한 후다시 json데이터로 로딩하여 화면단에 전달될 수 있는 구조로 확인)
4. dao/mapper/공통mybatis 작성
5. service
6. controller 단
	1) json데이터를 로딩하기 위한 pageJsonReport View 처리
	2) service단에서 받은 데이터 model로 설정
7. resource 메서드를통해서 ajax를 이용해 만들어 놓은 DB연동처리를 통한 json 데이터 호출 처리..(초기일정처리완료)

# 속성변경하기
1. 초기로딩하는 기준일 : 오늘로 변경처리
	initialDate : ISO형식으로 오늘 날짜로 처리..
	var Today = new Date();
	var TodayISO = Today.toISOString().split("T")[0] // 오늘 날짜 추출
	initialDate = TodayISO;

# 일정등록 처리
1. select에 이베늩 핸들러에서 처리되는 내장된 속성값이 어떤게 있는지 확인한다.

2. 입력할 정보를 처리하고, sql을 만든다.
INSERT INTO calendar values(cal_seq.nextval,#{title},to_date(#{start},'YYYY-MM-DD"T"HH24:MI:SS"+09:00"'),
to_date(#{end},'YYYY-MM-DD"T"HH24:MI:SS"+09:00"',#{writer},#{content},#{backgroundColor},#{textColor},#{allDay},#{url})
int insertCal(Calendar ins);

# calendar API 에서 사용하는 날짜처리형식? js Date객체를 ISO 형식으로 처리된 YYYY-MM-DDHH24:MI:SS+09:00 으로 사용된다.  
데이터베이스는 Date속성으로 처리되기 때문에 입력할때나 수정시, 조회할 때 위 형식으로 변환처리해야한다. 

to_date(#{start},'YYYY-MM-DDHH24:MI:SS') ==> to_date(#{start},'YYYY-MM-DDHH24:MI:SS+09:00')

[ex] 아래 api의 json형식
start : '2023-01-12T10:30:00',
JS DATE의 toISOString()
- select 시에는 to_char(날짜,'위 iso형식') 날짜를 ISO문자열 형식
- insert/update시에는 to_date('iso형식 문자열','iso형식') ISO문자열형식을 DB의 날짜(date)형식으로 변환 

title(입력), start(arg.start날짜==>ISO)
end(arg.end날짜==>ISO), writer(입력), content(입력)
background(color로 입력), textcolor(color입력)
allday(선택시자동입력), url(입력)


3. DB처리(dao/mapper 처리)
	- int insertCal(Calendar ins);

4. 화면단 처리
	1) 모달창으로 입력 form 생성 
	2) 모달창으로 입력 Form생성
		입력항목 / 로딩된 항목 확인
		등록버튼 클릭시 데이터 입력처리

# 등록된 일정 확인 및 수정/삭제 처리
1. 상세화면에서 수정
2. 스크롤로 일정변경(일정이동, 일정시간 변경 등)

# 수정처리 형식에 따른 이벤트 처리

####전체구조####
[controller]
- A07_FullCalendarController.java
	calendar.do : 화면폼(JSP)
	calList.do : (조회)리스트(JSP)
	insertCalendar.do : 등록처리(등록처리후 msg, 전체 데이터 JSON)
	=> JSP화면 안에 등록하면 ajax처리할 떄 사용(등록하면 데이터를 서버에 전송하고,
	전송 결과를 msg 모델 데이터로 받고 DB등록 후 최종 전체리스트 모델 받음)

[DB조회/등록]
- A07_CalendarDao.java // CalendarMapper.xml
	List<Calendar> getCalList();
	int insertCalendar(Calendar ins);

====BackEnd 끝!=============================================================================

[view]
- a12_fullcalendar.jsp
	초기데이터 로딩
		calendar.do 를 통해 초기화면 jsp를 호출하면서 resource 속성으로 함수를 호출하면
		전체 DB에 있는 일정 json데이터를 ajax에 의해 가져와서(calList.do)
		fullcalendar api에 할당 처리한다.
		
	모달화면
		등록처리
		=> select() 이벤트에 의해서 기본 form이 로딩되어 처리할 수 있게 해놓고,
		입력이 되면 ajax를 통해 form 에 입력된 정보들이 등록처리(insertCalendar.do 호출)
		해당 메서드를 호출하면 입력/입력 후 전체 데이터를 가져온다.
		내용확인 및 수정/삭제처리
		
			내용확인 및 수정/ 삭제처리
